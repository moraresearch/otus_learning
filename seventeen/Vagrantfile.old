# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']

MACHINES = {
  :testClient1 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.11',
  },
  :testClient2=> {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.12',
  },
  :testServer1 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.13',
  },
  :testServer2 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.14',
  },
  :bacula => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.152',
  },
  :client => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.161',
  }
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "2048"]
        #   vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
          vb.name = boxname.to_s

        #   boxconfig[:disks].each do |dname, dconf|
        #       unless File.exist?(dconf[:dfile])
        #         vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
        #       end
        #       vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
        # end
          end
      box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
      SHELL

      case boxname.to_s
      when "testClient1"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          yum install sudo -y
          groupadd sudo 
          sudo su
          useradd mora -G sudo -d /home/mora -s /bin/bash 
          cat /vagrant/sudoers > /etc/sudoers
          mkdir /home/mora/.ssh 
          cp /vagrant/id_rsa.pub /home/mora/.ssh/authorized_keys
          chown mora:mora -R /home/mora
          setenforce 0
          SHELL
      when "testClient2"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          setenforce 0
          yum install sudo -y
          groupadd sudo 
          sudo su
          useradd mora -G sudo -d /home/mora -s /bin/bash 
          cat /vagrant/sudoers > /etc/sudoers
          mkdir /home/mora/.ssh 
          cp /vagrant/id_rsa.pub /home/mora/.ssh/authorized_keys
          chown mora:mora -R /home/mora
          SHELL
      when "testServer1"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          setenforce 0
          yum install sudo  -y
          groupadd sudo 
          sudo su
          useradd mora -G sudo -d /home/mora -s /bin/bash 
          cat /vagrant/sudoers > /etc/sudoers
          mkdir /home/mora/.ssh 
          cp /vagrant/id_rsa.pub /home/mora/.ssh/authorized_keys
          chown mora:mora -R /home/mora
          SHELL
      when "testServer2"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          setenforce 0
          yum install sudo -y
          groupadd sudo 
          sudo su
          useradd mora -G sudo -d /home/mora -s /bin/bash 
          cat /vagrant/sudoers > /etc/sudoers
          mkdir /home/mora/.ssh 
          cp /vagrant/id_rsa.pub /home/mora/.ssh/authorized_keys
          chown mora:mora -R /home/mora
          SHELL
      when "bacula"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          cp /vagrant/elk.repo /etc/yum.repos.d/
          setenforce 0
          yum install dnf epel-release -y
          yum install sudo python3 -y
          groupadd sudo 
          sudo su
          useradd mora -G sudo -d /home/mora -s /bin/bash 
          cat /vagrant/sudoers > /etc/sudoers
          mkdir /home/mora/.ssh 
          cp /vagrant/id_rsa.pub /home/mora/.ssh/authorized_keys
          chown mora:mora -R /home/mora
        yum install -y vim mc bacula-director bacula-storage bacula-console mariadb-server
        systemctl start mariadb  
        setenforce 0 
        /usr/libexec/bacula/grant_mysql_privileges
        /usr/libexec/bacula/create_mysql_database -u root
        /usr/libexec/bacula/make_mysql_tables -u bacula 
        mysql -e "grant all on bacula.* to bacula@'localhost' identified by 'password';"
        echo "1
" | alternatives --config libbaccats.so 
        cat /vagrant/dir > /etc/bacula/bacula-dir.conf 
        cat /vagrant/sd > /etc/bacula/bacula-sd.conf
        cat /vagrant/bconsole > /etc/bacula/bconsole.conf 
        mkdir /backup 
        mkdir /var/lib/bacula 
        chown bacula:bacula -R /backup 
        chown bacula:bacula -R /var/lib/bacula 
        systemctl start bacula-dir bacula-sd
        echo "label pool=mainpool
one
exit" | bconsole  
          SHELL
      when "client"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          yum install epel-release -y
          cp /vagrant/elk.repo /etc/yum.repos.d/
          yum install sudo python3 -y
          groupadd sudo 
          sudo su
          useradd mora -G sudo -d /home/mora -s /bin/bash 
          cat /vagrant/sudoers > /etc/sudoers
          mkdir /home/mora/.ssh 
          cp /vagrant/id_rsa.pub /home/mora/.ssh/authorized_keys
          chown mora:mora -R /home/mora
        SHELL
      end

      end
   end
end
